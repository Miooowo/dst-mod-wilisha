---@meta

---@class data_componentaction # 组件动作
---@field id string # 唯一ID,全大写
---@field str (fun(act: { doer: ent|nil, target: ent|nil, invobject: ent|nil, GetActionPoint: fun(): Vector3}):string)|string # 动作描述,可以是函数,直接返回动作显示的字符串
---@field fn fun(act: { doer: ent|nil, target: ent|nil, invobject: ent|nil, GetActionPoint: fun(): Vector3}): boolean # 动作触发时执行函数
---@field state (fun(inst:ent,act: { doer: ent|nil, target: ent|nil, invobject: ent|nil, GetActionPoint: fun(): Vector3}):string)|string|"give"|"doshortaction"|"domediumaction"|"dolongaction"|"castspell"|"quickcastspell" # 播放什么sg <br> '"give"' # 给予 <br> '"doshortaction"' # 快速搓东西 <br> '"domediumaction"' # 正常搓东西 <br> '"dolongaction"' # 慢慢搓东西 <br> '"castspell"' # 慢速释放法术 <br> '"quickcastspell"' # 快速释放法术
---@field actiondata actiondata
---@field canqueuer string|nil # 兼容排队论
---| '"allclick"' # 默认
---| '"rightclick"' # 右键动作
---@field type string 动作类型
---| '"SCENE"' # 点击物品栏物品或世界的物品时执行,比如采集 <br> `testfn` args: inst, doer, actions, right <br> `fn`: `act.target` - `互动的目标`
---| '"USEITEM"' # 拿起某物品放到另一物品上执行,比如添加燃料 <br> `testfn` args: inst, doer, target, actions, right
---| '"POINT"' # 装备某手持物品或鼠标拎起某一物品时对地面执行 <br> `testfn` args: inst, doer, pos, actions, right
---| '"EQUIPPED"' # 装备某物品时激活，比如装备火把点火 <br> `testfn` args: inst, doer, target, actions, right
---| '"INVENTORY"' # 物品栏右键执行，比如吃东西 <br> `testfn` args: inst, doer, actions, right
---@field component componentID # 需要绑定的组件
---@field testfn_type_SCENE nil|fun(inst: ent, doer: ent, actions: any, right: boolean): boolean # 检测是否允许触发动作的函数 <br> 这5个testfn只要填对应的那个
---@field testfn_type_USEITEM nil|fun(inst: ent, doer: ent, target: ent, actions: any, right: boolean): boolean # 检测是否允许触发动作的函数 <br> 这5个testfn只要填对应的那个
---@field testfn_type_POINT nil|fun(inst: ent, doer: ent, pos: Vector3, actions: any, right: boolean): boolean # 检测是否允许触发动作的函数 <br> 这5个testfn只要填对应的那个
---@field testfn_type_EQUIPPED nil|fun(inst: ent, doer: ent, target: ent, actions: any, right: boolean): boolean # 检测是否允许触发动作的函数 <br> 这5个testfn只要填对应的那个
---@field testfn_type_INVENTORY nil|fun(inst: ent, doer: ent, actions: any, right: boolean): boolean # 检测是否允许触发动作的函数 <br> 这5个testfn只要填对应的那个

---@class actiondata
---@field priority number|nil # 优先级
---@field mount_valid boolean|nil # 骑乘使用
---@field distance number|nil # 距离

---@class data_componentaction_change # 修改官方组件动作的testfn
---@field type string 动作类型
---| '"SCENE"' # 点击物品栏物品或世界的物品时执行,比如采集 <br> `testfn` args: inst, doer, actions, right
---| '"USEITEM"' # 拿起某物品放到另一物品上执行,比如添加燃料 <br> `testfn` args: inst, doer, target, actions, right
---| '"POINT"' # 装备某手持物品或鼠标拎起某一物品时对地面执行 <br> `testfn` args: inst, doer, pos, actions, right
---| '"EQUIPPED"' # 装备某物品时激活，比如装备火把点火 <br> `testfn` args: inst, doer, target, actions, right
---| '"INVENTORY"' # 物品栏右键执行，比如吃东西 <br> `testfn` args: inst, doer, actions, right
---@field component componentID # 需要修改的组件名
---@field testfn fun(old_testfn,...):boolean # 新的testfn